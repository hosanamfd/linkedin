# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KTlOBn_FZ2CYxIH6Hj51O7gRqzIOdE03
"""

!pip install ipywidgets
import ipywidgets as widgets
from IPython.display import display

tabuleiro = ['' for _ in range(9)]
jogador = 'x'


def mostrar_tabuleiro(tabuleiro):
  for i in range(3): #
    linha = tabuleiro[i*3: (i+1)*3]  #fatiamento de linhas
    linha_formatada = [' ' if cel == '' else cel for cel in linha]
    print('| ' + ' | '.join(linha) + ' |') # adiciona divisoes
mostrar_tabuleiro(tabuleiro)

def fazer_jogada (tabuleiro, posicao, jogador):
  if tabuleiro[posicao]== '': # s√≥ ira "aceitar a jogada se a posi√ß√£o estiver vazia"
    tabuleiro[posicao] = jogador
    print("jogada v√°lida")
    return True
  else :
    print('essa posi√ß√£o ja esta ocupada ') # se ja estiver ocupada n√£o sera uma jogada valida
    return False

def verificar_vitoria(tabuleiro,jogador):
  vit√≥ria = any(
  tabuleiro[a] == tabuleiro[b]== tabuleiro[c] == jogador
  for a , b, c in[
    (0,1,2),(3,4,5),(6,7,8), # vitoria com linhas
    (0,3,6),(1,4,7),(2,5,8), # vitoria com colunas
    (0,4,8),(2,4,6) # vitoria com diagonais
    ]
  )
  if vit√≥ria:
    mostrar_tabuleiro(tabuleiro)
    print(f" üéâ o jogador {jogador} venceu!")
    return True
  else:
    return False

def verificar_empate(tabuleiro):
  return '' not in tabuleiro
  mostrar_tabuleiro(tabuleiro)
  print("o jogo terminou em empate")

def jogar():
  jogador = "X"
  tabuleiro = ['' for _ in range(9)]
  while True:
    mostrar_tabuleiro(tabuleiro)
    posicao = int(input(f'jogador {jogador}, escolha uma posi√ß√£o de 1 ao 9 ' )) -1 # para ficar no padr√£o da lista (0-8)

    if not fazer_jogada(tabuleiro, posicao, jogador):
      continue
    if verificar_vitoria(tabuleiro, jogador):
      break
    if verificar_empate(tabuleiro):
      break
    if jogador == "X":
      jogador ="O"
    else:
     jogador = "X"

jogar()

